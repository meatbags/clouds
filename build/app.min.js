var clouds=function(t){var e={};function i(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,i),s.l=!0,s.exports}return i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(r,s,function(e){return t[e]}.bind(null,s));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=6)}([function(t,e){THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}},function(t,e){var i,r,s;THREE.EffectComposer=function(t,e){if(this.renderer=t,void 0===e){var i={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},r=t.getDrawingBufferSize(new THREE.Vector2);(e=new THREE.WebGLRenderTarget(r.width,r.height,i)).texture.name="EffectComposer.rt1"}this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader),this._previousFrameTime=Date.now()},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t},addPass:function(t){this.passes.push(t);var e=this.renderer.getDrawingBufferSize(new THREE.Vector2);t.setSize(e.width,e.height)},insertPass:function(t,e){this.passes.splice(e,0,t)},isLastEnabledPass:function(t){for(var e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0},render:function(t){void 0===t&&(t=.001*(Date.now()-this._previousFrameTime)),this._previousFrameTime=Date.now();var e,i,r=this.renderer.getRenderTarget(),s=!1,o=this.passes.length;for(i=0;i<o;i++)if(!1!==(e=this.passes[i]).enabled){if(e.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),e.render(this.renderer,this.writeBuffer,this.readBuffer,t,s),e.needsSwap){if(s){var a=this.renderer.context;a.stencilFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),a.stencilFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(e instanceof THREE.MaskPass?s=!0:e instanceof THREE.ClearMaskPass&&(s=!1))}this.renderer.setRenderTarget(r)},reset:function(t){if(void 0===t){var e=this.renderer.getDrawingBufferSize(new THREE.Vector2);(t=this.renderTarget1.clone()).setSize(e.width,e.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(t,e){this.renderTarget1.setSize(t,e),this.renderTarget2.setSize(t,e);for(var i=0;i<this.passes.length;i++)this.passes[i].setSize(t,e)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(t,e){},render:function(t,e,i,r,s){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),THREE.Pass.FullScreenQuad=(i=new THREE.OrthographicCamera(-1,1,1,-1,0,1),r=new THREE.PlaneBufferGeometry(2,2),s=function(t){this._mesh=new THREE.Mesh(r,t)},Object.defineProperty(s.prototype,"material",{get:function(){return this._mesh.material},set:function(t){this._mesh.material=t}}),Object.assign(s.prototype,{render:function(t){t.render(this._mesh,i)}}),s)},function(t,e){THREE.LuminosityHighPassShader={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","gl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")}},function(t,e){THREE.RenderPass=function(t,e,i,r,s){THREE.Pass.call(this),this.scene=t,this.camera=e,this.overrideMaterial=i,this.clearColor=r,this.clearAlpha=void 0!==s?s:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1},THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(t,e,i,r,s){var o,a,n=t.autoClear;t.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(o=t.getClearColor().getHex(),a=t.getClearAlpha(),t.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:i),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),this.clearColor&&t.setClearColor(o,a),this.scene.overrideMaterial=null,t.autoClear=n}})},function(t,e){THREE.ShaderPass=function(t,e){THREE.Pass.call(this),this.textureID=void 0!==e?e:"tDiffuse",t instanceof THREE.ShaderMaterial?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=THREE.UniformsUtils.clone(t.uniforms),this.material=new THREE.ShaderMaterial({defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this.fsQuad=new THREE.Pass.FullScreenQuad(this.material)},THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(t,e,i,r,s){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this.fsQuad.render(t))}})},function(t,e){THREE.UnrealBloomPass=function(t,e,i,r){THREE.Pass.call(this),this.strength=void 0!==e?e:1,this.radius=i,this.threshold=r,this.resolution=void 0!==t?new THREE.Vector2(t.x,t.y):new THREE.Vector2(256,256),this.clearColor=new THREE.Color(0,0,0);var s={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var o=Math.round(this.resolution.x/2),a=Math.round(this.resolution.y/2);this.renderTargetBright=new THREE.WebGLRenderTarget(o,a,s),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var n=0;n<this.nMips;n++){var h=new THREE.WebGLRenderTarget(o,a,s);h.texture.name="UnrealBloomPass.h"+n,h.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(h);var l=new THREE.WebGLRenderTarget(o,a,s);l.texture.name="UnrealBloomPass.v"+n,l.texture.generateMipmaps=!1,this.renderTargetsVertical.push(l),o=Math.round(o/2),a=Math.round(a/2)}void 0===THREE.LuminosityHighPassShader&&console.error("THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader");var u=THREE.LuminosityHighPassShader;this.highPassUniforms=THREE.UniformsUtils.clone(u.uniforms),this.highPassUniforms.luminosityThreshold.value=r,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new THREE.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,defines:{}}),this.separableBlurMaterials=[];var d=[3,5,7,9,11];for(o=Math.round(this.resolution.x/2),a=Math.round(this.resolution.y/2),n=0;n<this.nMips;n++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(d[n])),this.separableBlurMaterials[n].uniforms.texSize.value=new THREE.Vector2(o,a),o=Math.round(o/2),a=Math.round(a/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");var c=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(c.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.basic=new THREE.MeshBasicMaterial,this.fsQuad=new THREE.Pass.FullScreenQuad(null)},THREE.UnrealBloomPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.UnrealBloomPass,dispose:function(){for(var t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose()},setSize:function(t,e){var i=Math.round(t/2),r=Math.round(e/2);this.renderTargetBright.setSize(i,r);for(var s=0;s<this.nMips;s++)this.renderTargetsHorizontal[s].setSize(i,r),this.renderTargetsVertical[s].setSize(i,r),this.separableBlurMaterials[s].uniforms.texSize.value=new THREE.Vector2(i,r),i=Math.round(i/2),r=Math.round(r/2)},render:function(t,e,i,r,s){this.oldClearColor.copy(t.getClearColor()),this.oldClearAlpha=t.getClearAlpha();var o=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),s&&t.context.disable(t.context.STENCIL_TEST),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=i.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=i.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);for(var a=this.renderTargetBright,n=0;n<this.nMips;n++)this.fsQuad.material=this.separableBlurMaterials[n],this.separableBlurMaterials[n].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[n].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[n]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[n].uniforms.colorTexture.value=this.renderTargetsHorizontal[n].texture,this.separableBlurMaterials[n].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[n]),t.clear(),this.fsQuad.render(t),a=this.renderTargetsVertical[n];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,s&&t.context.enable(t.context.STENCIL_TEST),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(i),this.fsQuad.render(t)),t.setClearColor(this.oldClearColor,this.oldClearAlpha),t.autoClear=o},getSeperableBlurMaterial:function(t){return new THREE.ShaderMaterial({defines:{KERNEL_RADIUS:t,SIGMA:t},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(t){return new THREE.ShaderMaterial({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),THREE.UnrealBloomPass.BlurDirectionX=new THREE.Vector2(1,0),THREE.UnrealBloomPass.BlurDirectionY=new THREE.Vector2(0,1)},function(t,e,i){"use strict";i.r(e);var r={width:960,height:540};const s=(t,e,i)=>(e-t)*i+t,o=function(t,e){return Math.atan2(Math.sin(e-t),Math.cos(e-t))},a=(t,e,i)=>Math.min(i,Math.max(e,t));var n=class{constructor(t){this.root=t,this.position=new THREE.Vector3(0,10,0),this.rotation=new THREE.Vector2,this.motion=new THREE.Vector3,this.target={position:this.position.clone(),rotation:this.rotation.clone(),motion:this.motion.clone()},this.collider=new Collider.Point({system:this.root.colliderSystem,position:this.target.position,motion:this.motion,gravity:20}),this.speed=6,this.rotationSpeed=.5*Math.PI,this.jump=8,this.jumpSpeedMultiplier=.25,this.height=3,this.falling=!1,this.fallTime=0,this.fallTimeThreshold=.2,this.minPitch=-.125*Math.PI,this.maxPitch=.125*Math.PI,this.adjust={slow:.05,normal:.1,fast:.125,maximum:.3},this.noclip=!1,this.keys={disabled:!1}}move(t){if(this.keys.left||this.keys.right){const e=(this.keys.left?1:0)+(this.keys.right?-1:0);this.target.rotation.x+=e*this.rotationSpeed*t}if(this.keys.up||this.keys.down){const t=this.noclip?this.noclipSpeed*(1-Math.abs(Math.sin(this.target.rotation.y))):this.speed,e=(this.keys.up?1:0)+(this.keys.down?-1:0);this.target.motion.x=Math.sin(this.rotation.x)*t*e,this.target.motion.z=Math.cos(this.rotation.x)*t*e}else this.target.motion.x=0,this.target.motion.z=0;if(this.keys.jump&&(0==this.motion.y||this.fallTime<this.fallTimeThreshold)&&(this.motion.y=this.jump,this.fallTime=this.fallTimeThreshold),this.falling=0!=this.motion.y,this.fallTime=this.falling?this.fallTime+t:0,this.noclip){if(this.falling=!1,this.keys.up||this.keys.down){const t=(this.keys.up?1:0)+(this.keys.down?-1:0);this.target.motion.y=Math.sin(this.target.rotation.y)*t*this.noclipSpeed}else this.target.motion.y=0;this.motion.y=this.target.motion.y}this.falling?(this.motion.x=s(this.motion.x,this.target.motion.x,this.jumpSpeedMultiplier),this.motion.z=s(this.motion.z,this.target.motion.z,this.jumpSpeedMultiplier)):(this.motion.x=this.target.motion.x,this.motion.z=this.target.motion.z)}setRotation(t,e){this.target.rotation.y=t,this.target.rotation.x=e}update(t){this.keys.disabled||(this.move(t),this.noclip?(this.target.position.x+=this.motion.x*t,this.target.position.y+=this.motion.y*t,this.target.position.z+=this.motion.z*t):this.collider.collide(t),this.position.x=s(this.position.x,this.target.position.x,this.adjust.maximum),this.position.y=s(this.position.y,this.target.position.y,this.adjust.maximum),this.position.z=s(this.position.z,this.target.position.z,this.adjust.maximum)),this.rotation.x+=o(this.rotation.x,this.target.rotation.x)*this.adjust.normal,this.rotation.y=s(this.rotation.y,this.target.rotation.y,this.adjust.normal)}};var h=class{constructor(t){this.root=t,this.position=t.player.position,this.rotation=t.player.rotation,this.height=t.player.height,this.fov=65,this.aspectRatio=this.root.width/this.root.height,this.offset=.1,this.camera=new THREE.PerspectiveCamera(this.fov,this.aspectRatio,.1,2e6),this.camera.up=new THREE.Vector3(0,1,0),this.camera.rotation.order="YXZ"}resize(t,e){this.aspectRatio=this.root.width/this.root.height,this.camera.aspect=this.aspectRatio,this.camera.updateProjectionMatrix()}update(t){this.offset,this.offset,Math.abs(Math.sin(this.rotation.y)),this.offset,this.position.y,this.height,this.camera.position.set(this.position.x,this.position.y+this.height,this.position.z),this.camera.rotation.y=this.rotation.x+Math.PI,this.camera.rotation.x=this.rotation.y}};var l=class{constructor(){this.width=r.width,this.height=r.height,this.scene=new THREE.Scene,this.colliderSystem=new Collider.System,this.player=new n(this),this.camera=new h(this);for(var t=0;t<100;t++){const t=3*Math.random()+3,e=new THREE.Mesh(new THREE.BoxBufferGeometry(t,2,t),new THREE.MeshPhysicalMaterial({color:8947848}));e.rotation.set(Math.random()*Math.PI,Math.random()*Math.PI,0),e.position.set(-50*Math.random()+25,2*Math.random()-1,-50*Math.random()+25),this.scene.add(e),this.colliderSystem.add(e)}const e=new THREE.Mesh(new THREE.BoxBufferGeometry(50,2,50),new THREE.MeshPhysicalMaterial({color:8947848})),i=new THREE.AmbientLight(16777215,.05),s=new THREE.PointLight(16777215,1,50,2);s.position.y=10,this.scene.add(e,i,s),this.colliderSystem.add(e)}update(t){this.player.update(t),this.camera.update(t)}};i(0),i(1),i(2),i(3),i(4),i(5);var u=class{constructor(t){this.root=t,this.renderer=new THREE.WebGLRenderer({}),this.renderer.setClearColor(0,1),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0,this.renderer.gammaFactor=2,this.width=800,this.height=600,this.size=new THREE.Vector2(this.width,this.height),this.passRender=new THREE.RenderPass(t.logic.scene,t.logic.camera.camera),this.passBloom=new THREE.UnrealBloomPass(this.size,.5,.125,.96),this.passBloom.renderToScreen=!0,this.composer=new THREE.EffectComposer(this.renderer),this.composer.addPass(this.passRender),this.composer.addPass(this.passBloom),this.resize(),document.querySelector("#canvas-target").appendChild(this.renderer.domElement)}resize(){this.width=800,this.height=600,this.size.x=this.width,this.size.y=this.height,this.renderer.setSize(this.width,this.height),this.composer.setSize(this.width,this.height),this.passBloom.setSize(this.width,this.height)}render(t){this.composer.render(t)}};var d=class{constructor(t,e,i,r,s){this.x=0,this.y=0,this.origin={x:0,y:0},this.delta={x:0,y:0},this.active=!1,this.domElement=t,s?(this.domElement.addEventListener("touchstart",e,!1),this.domElement.addEventListener("touchmove",i,!1),this.domElement.addEventListener("touchend",r,!1)):(this.domElement.addEventListener("mousedown",e,!1),this.domElement.addEventListener("mousemove",i,!1),this.domElement.addEventListener("mouseup",r,!1),this.domElement.addEventListener("mouseleave",r,!1)),this.domElement.addEventListener("click",t=>{i(t),r(t)},!1)}start(t){this.active=!0,this.origin.x=t.offsetX,this.origin.y=t.offsetY}move(t){this.x=t.offsetX,this.y=t.offsetY,this.delta.x=this.x-this.origin.x,this.delta.y=this.y-this.origin.y}stop(){this.active=!1}};var c=class{constructor(t){this.keys={},this.onEvent=t,document.addEventListener("keydown",t=>{this.onKeyDown(t)}),document.addEventListener("keyup",t=>{this.onKeyUp(t)})}onKeyDown(t){this.keys[t.key]=!0,this.onEvent(t.key)}onKeyUp(t){this.keys[t.key]=!1,this.onEvent(t.key)}release(t){this.keys[t]=!1}isSpecial(){return this.keys.Shift||this.keys.Control||this.keys.Alt}isControl(){return this.keys.Control}isShift(){return this.keys.Shift}isAlt(){return this.keys.Alt}};var m=class{constructor(t){this.player=t.logic.player,this.domElement=document.querySelector("#canvas-target"),this.centre={x:0,y:0},this.resize(),this.rotation=new THREE.Vector2,this.timestamp=null,this.threshold={click:225,pan:200,mouseDelta:.25},this.scaleRotation={x:1,y:1},this.keyboard=new c(t=>{this.onKeyboard(t)}),this.mouse=new d(this.domElement,t=>{this.onMouseDown(t)},t=>{this.onMouseMove(t)},t=>{this.onMouseUp(t)},this.isMobile)}processTouch(t){let e=0,i=0;if(t.targetTouches&&t.targetTouches.length){const r=this.domElement.getBoundingClientRect(),s=t.targetTouches[0];e=s.pageX-r.left,i=s.pageY-r.top}return{offsetX:e,offsetY:i}}onMouseDown(t){this.rotation.y=this.player.rotation.y,this.rotation.x=this.player.rotation.x,this.timestamp=Date.now(),this.mouse.start(t),this.isMobile&&this.onMouseMove(t)}onMouseMove(t){if(this.mouse.move(t),this.mouse.active&&!this.player.keys.left&&!this.player.keys.right){const e=this.rotation.x+this.mouse.delta.x/this.centre.x*this.scaleRotation.x,i=a(this.rotation.y+this.mouse.delta.y/this.centre.y*this.scaleRotation.y,this.player.minPitch,this.player.maxPitch);i!=this.player.minPitch&&i!=this.player.maxPitch||(this.mouse.origin.y=t.offsetY,this.rotation.y=i),this.player.setRotation(i,e)}}onMouseUp(t){this.mouse.stop(),Date.now()-this.timestamp<this.threshold.click&&(Math.hypot(this.mouse.delta.x,this.mouse.delta.y),window.innerWidth,this.threshold.mouseDelta)}onKeyboard(t){switch(t){case"a":case"A":case"ArrowLeft":this.player.keys.left=this.keyboard.keys[t];break;case"d":case"D":case"ArrowRight":this.player.keys.right=this.keyboard.keys[t];break;case"w":case"W":case"ArrowUp":this.player.keys.up=this.keyboard.keys[t];break;case"s":case"S":case"ArrowDown":this.player.keys.down=this.keyboard.keys[t];break;case" ":this.player.keys.jump=this.keyboard.keys[t]}}resize(){const t=this.domElement.getBoundingClientRect();this.centre.x=t.width/2,this.centre.y=t.height/2}};class f{constructor(){this.logic=new l,this.renderer=new u(this),this.controlSurface=new m(this),this.time={now:performance.now(),maxDelta:.1},this.active=!0,this.loop()}loop(){if(requestAnimationFrame(()=>{this.loop()}),this.active){const t=performance.now(),e=Math.min(this.time.maxDelta,(t-this.time.now)/1e3);this.time.now=t,this.logic.update(e),this.renderer.render(e)}}}window.onload=(()=>{new f})}]);